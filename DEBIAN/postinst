#!/bin/sh -e

# Source debconf library.
. /usr/share/debconf/confmodule

if [ "$1" != configure ]; then
    exit 0
fi

AAT="aat"
OCTO="octopussy"
CHMOD="/bin/chmod 644"
CHMOD_X="/bin/chmod 755"
CHOWN="/bin/chown $OCTO:$OCTO"
CHOWNR="/bin/chown -R $OCTO:$OCTO"
CP="/bin/cp -f"
ECHO="/bin/echo"
FIND="/usr/bin/find"
LN="/bin/ln -f -s"
MKDIR="/bin/mkdir -p"
MKFIFO="/usr/bin/mkfifo"
SED="/bin/sed -i"
INVOKERC="/usr/sbin/invoke-rc.d"
UPDATERC="/usr/sbin/update-rc.d"
DIR_FIFO="/var/spool/octopussy/"
FILE_FIFO="/var/spool/octopussy/octo_fifo"

#
# Create Directories & Change Octopussy permission files
#
$MKDIR /var/lib/$OCTO/
$MKDIR /var/run/$AAT/
$MKDIR /var/run/$OCTO/
$CHOWNR /etc/$AAT/ /etc/$OCTO/ /usr/share/$AAT/ /usr/share/$OCTO/ /usr/sbin/octo* 2> /dev/null || true
$CHOWN /var/lib/$OCTO/ /var/lib/$OCTO/logs/ 2> /dev/null || true
$CHOWNR /var/lib/$OCTO/{conf,reports,rrd} /var/run/$AAT/ /var/run/$OCTO/ 2> /dev/null || true
$FIND /usr/share/perl5/AAT* -name "*.pm" |xargs $CHMOD
$FIND /usr/share/perl5/Octopussy* -name "*.pm" |xargs $CHMOD

#
# Create Octopussy MySQL Database
#
db_get octopussy/mysql_root_password && MYSQL="/usr/bin/mysql -u root --password=$RET --exec"

$MYSQL="CREATE DATABASE IF NOT EXISTS $OCTO" || true
$MYSQL="CREATE TABLE IF NOT EXISTS $OCTO._alerts_ (log_id bigint(20) NOT NULL auto_increment, alert_id varchar(250) default NULL, status varchar(50) default 'Opened', level varchar(50) default NULL, date_time datetime default NULL, device varchar(250) default NULL, log text default NULL, comment text default NULL, PRIMARY KEY(log_id))" || true
$MYSQL="INSERT IGNORE INTO mysql.user (host,user,password, file_priv) values ('localhost','octopussy',password('octopussy'), 'Y')" || true
$MYSQL="INSERT IGNORE INTO mysql.db (host,user,db,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Drop_priv) values ('localhost','octopussy','octopussy','Y','Y','Y','Y','Y','Y')" || true
$MYSQL="FLUSH PRIVILEGES" || true


#
# Add octo_logrotate to cron.daily
#
CRON_FILE="/etc/cron.daily/octo_logrotate"

$ECHO "#!/bin/sh" > $CRON_FILE
$ECHO "" >> $CRON_FILE
$ECHO "test -x /usr/sbin/octo_logrotate || exit 0" >> $CRON_FILE
$ECHO "/usr/sbin/octo_logrotate" >> $CRON_FILE
$CHMOD_X $CRON_FILE 2> /dev/null || true

#
# Create init files
#
$LN /usr/sbin/$OCTO /etc/init.d/$OCTO || true
$UPDATERC $OCTO defaults 99 || true

#
# Apache2 Configuration
#
A2DISSITE="/usr/sbin/a2dissite"
A2ENSITE="/usr/sbin/a2ensite"
A2ENMOD="/usr/sbin/a2enmod"
APACHE2_FILE="/etc/apache2/apache2.conf"

$CP $APACHE2_FILE $APACHE2_FILE.old
$SED "s?^User.*?User $OCTO?g" $APACHE2_FILE
$SED "s?^Group.*?Group $OCTO?g" $APACHE2_FILE
$A2DISSITE default 2> /dev/null || true
$A2ENSITE $OCTO 2> /dev/null || true
$A2ENMOD dir 2> /dev/null || true
$A2ENMOD ssl 2> /dev/null || true
$MKDIR /var/cache/$OCTO/asp/
$CHOWNR /var/cache/$OCTO/asp/ 2> /dev/null || true
if ! grep -q "Listen.*[: ]443$" /etc/apache2/ports.conf 2> /dev/null;
then
$ECHO "Listen 443" >> /etc/apache2/ports.conf
fi
$LN /usr/share/$AAT/ /usr/share/$OCTO/AAT

#
# Octopussy FIFO creation
#
$MKDIR $DIR_FIFO
$MKFIFO $FILE_FIFO 2> /dev/null || true
$CHOWNR $DIR_FIFO

#
# Restart Apache & Octopussy
#
$INVOKERC apache2 restart 2> /dev/null || true
$INVOKERC octopussy start 2> /dev/null || true

db_stop

exit 0
